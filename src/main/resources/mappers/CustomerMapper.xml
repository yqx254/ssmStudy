<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.maven.core.dao.CustomerDao">
    <resultMap id="CustomerResult" type="Customer">
        <result property="id"  column="id"/>
        <result property="name" column="name"/>
        <result property="require" column="req"/>
        <result property="date" column="date"/>
        <result property="empId" column="emp_id"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
    </resultMap>
    <select id="customerList" resultMap="CustomerResult" parameterType="Map">
        SELECT * FROM ssm_customer
        <where>
            delete_flag = 0
            <if test="keyword != null and !''=keyword">
                AND (
                    name LIKE CONCAT('%', keyword, '%')
                    OR require LIKE CONCAT('%', require, '%')
                )
            </if>
            <if test="start != null and size != null">
                LIMIT #{start}, #{size}
            </if>
        </where>
    </select>
    <select id="customerTotal" resultType="Long" parameterType="Map">
        SELECT COUNT(*) FROM  ssm_customer
        <where>
            delete_flag = 0
        </where>
    </select>
    <select id="findCustomer" resultType="Customer" parameterType="Long">
        SELECT * FROM ssm_customer
        <where>
            delete_flag = 0 AND id = #{id}
        </where>
    </select>
    <update id="updateCustomer" parameterType="Customer">
        UPDATE ssm_customer SET  name=#{name}, mobile=#{mobile},
            req=#{require}, date=#{date}, emp_id=#{empId},updated_at=#{updatedAt}
            <where>
                id = #{id}
            </where>
    </update>
    <insert id="addCustomer" parameterType="Customer">
        INSERT INTO ssm_customer(name, mobile, req, date, emp_id,created_at,updated_at)
         VALUES(#{name}, #{mobile},#{require},#{date},#{empId},#{createdAt},#{updatedAt})
    </insert>
    <update id = "deleteCustomer" parameterType="String">
        UPDATE ssm_customer SET delete_flag = 2
        <where>
            id = #{id}
        </where>
    </update>
</mapper>
